'''
–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç üå∂Ô∏è

–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ n –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ n√ón,
—Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª 1,2,3,‚Ä¶,n**2 —Ç–∞–∫, —á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É,
–∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π.
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.
'''

n = int(input())
matrix = []
digit_list = []

for i in range(n):
    row = [int(num) for num in input().split()]
    matrix.append(row)

is_quad_magic = True

for i in range(n):
    for j in range(n):
        if matrix[i][j] in range(1, n**2 + 1) and matrix[i][j] not in digit_list:
            digit_list.append(matrix[i][j])
if len(digit_list) != n ** 2:
    is_quad_magic = False

if not is_quad_magic:
    print('NO')
else:
    row_sum = sum(matrix[0])
    for i in range(1, n):
        if sum(matrix[i]) != row_sum:
            is_quad_magic = False

    if not is_quad_magic:
        print('NO')
    else:
        for j in range(n):
            col_sum = 0
            for i in range(n):
                col_sum += matrix[i][j]
            if col_sum != row_sum:
                is_quad_magic = False
                break

        if not is_quad_magic:
            print('NO')
        else:
            main_diag_sum = 0
            second_diag_sum = 0
            for i in range(n):
                main_diag_sum += matrix[i][i]
            for i in range(n):
                second_diag_sum += matrix[i][n - i - 1]
            if main_diag_sum != row_sum or second_diag_sum != row_sum:
                is_quad_magic = False
                print('NO')
            else:
                print('YES')

'''
–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –≤ —Å—Ç–µ–ø–µ–Ω—å üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤–æ–¥–∏—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ m-—É—é —Å—Ç–µ–ø–µ–Ω—å.
'''
import copy

#–∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Ç—Ä–∏—Ü—É —á–∏—Å–ª–∞–º–∏
n = int(input())
matrix = []
for i in range(n):
    row = [int(num) for num in input().split()]
    matrix.append(row)
#—Å—Ç–µ–ø–µ–Ω—å
m = int(input())

#–º–∞—Ç—Ä–∏—Ü–∞-–º–Ω–æ–∂–∏—Ç–µ–ª—å
matrix_copy = copy.deepcopy(matrix)

#–º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —Å—Ç—Ä–æ–∫–∏ –º–∞—Ç—Ä–∏—Ü—ã-–º–Ω–æ–∂–∏—Ç–µ–ª—è —Å–æ —Å—Ç–æ–ª–±—Ü–∞–º–∏ (—á—Ç–æ–±—ã –ø—Ä–æ—â–µ —É–º–Ω–æ–∂–∞—Ç—å)
matrix_rotate = []
for j in range(n):
    lst = []
    for i in range(n):
        lst.append(matrix[i][j])
    matrix_rotate.append(lst)

#–∑–∞–ø–æ–ª–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É –Ω—É–ª—è–º–∏
result_matrix = [[0] * n for _ in range(n)]

#–∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Ç—Ä–∏—Ü—É –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å—É–º–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã –∏ –º–∞—Ç—Ä–∏—Ü—ã-–º–Ω–æ–∂–∏—Ç–µ–ª—è
for step in range(m - 1):
    if step > 0:
        matrix = copy.deepcopy(result_matrix)
        result_matrix = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            for k in range(n):
                result_matrix[i][j] += matrix[i][k] * matrix_rotate[j][k]

#–≤—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É
for i in range(n):
    for j in range(m):
        print(str(result_matrix[i][j]).ljust(3), end=' ')
    print()